// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"z/8vAAD///LRMQBVMgEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
