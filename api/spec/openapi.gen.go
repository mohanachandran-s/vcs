// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NQEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
